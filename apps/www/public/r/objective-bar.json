{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "objective-bar",
  "type": "registry:ui",
  "title": "Objective Bar",
  "description": "A bar that displays the current objective.",
  "dependencies": [
    "motion",
    "lucide-react",
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "registry/components/objective-bar/index.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport { PackageIcon } from \"lucide-react\";\nimport { motion } from \"motion/react\";\nimport * as React from \"react\";\n\ninterface ObjectiveBarProps {\n  startLabel?: string;\n  endLabel?: string;\n  bgColor?: string;\n  accentColor?: string;\n  icon?: React.ElementType;\n  steps?: number;\n  currentStep?: number;\n  children: React.ReactNode;\n}\n\nconst ObjectiveBar = ({\n  startLabel,\n  endLabel,\n  bgColor,\n  accentColor,\n  icon: Icon = PackageIcon,\n  steps = 4,\n  currentStep: currentStepProp = 2,\n  children,\n}: ObjectiveBarProps) => {\n  const [currentStep, setCurrentStep] = React.useState<number>(0);\n  const currentStepRef = React.useRef<HTMLDivElement>(null);\n  const points = Array.from({ length: steps }, (_, i) => i);\n  const primaryColor = React.useMemo(() => bgColor || \"#000\", [bgColor]);\n  const secondaryColor = React.useMemo(\n    () => accentColor || \"#fff\",\n    [accentColor],\n  );\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setCurrentStep(currentStepProp);\n    }, 1000);\n  }, [currentStepProp]);\n\n  return (\n    <div className=\"flex flex-col gap-2 w-full rounded-lg p-2\">\n      <div\n        className=\"relative w-full h-6 rounded-full border\"\n        style={{\n          background: primaryColor,\n        }}\n      >\n        {startLabel && (\n          <span\n            className=\"absolute left-2 top-1/2 -translate-y-1/2 text-muted text-xs z-20\"\n            style={{\n              color: currentStep === 0 ? secondaryColor : primaryColor,\n            }}\n          >\n            {startLabel}\n          </span>\n        )}\n        <motion.div\n          className=\"absolute h-full rounded-l-full\"\n          style={{\n            background: secondaryColor,\n          }}\n          animate={{ width: `calc(${(currentStep / (steps - 1)) * 100}%)` }}\n          transition={{ type: \"spring\", stiffness: 120, damping: 20 }}\n        />\n        <motion.div\n          ref={currentStepRef}\n          className={cn(\n            \"absolute top-1/2 -translate-y-1/2 shadow-sm flex items-center justify-center rounded-full p-2 z-30 border\",\n            currentStep !== 0 && \"-translate-x-1/2\",\n          )}\n          style={{\n            background: secondaryColor,\n          }}\n          animate={{\n            left: `calc(${(currentStep / (steps - 1)) * 100}% - 2px)`,\n          }}\n          transition={{ type: \"spring\", stiffness: 120, damping: 20 }}\n        >\n          <Icon className=\"size-6\" style={{ color: primaryColor }} />\n        </motion.div>\n        {endLabel && (\n          <span\n            className=\"absolute right-2 top-1/2 -translate-y-1/2 text-muted text-xs z-20\"\n            style={{\n              color: currentStep !== steps ? secondaryColor : primaryColor,\n            }}\n          >\n            {endLabel}\n          </span>\n        )}\n        {points.length > 2 &&\n          points.slice(1, -1).map((point, index) => (\n            <span\n              key={point}\n              className=\"absolute top-1/2 -translate-y-1/2 z-10 rounded-full size-1 transition-all duration-300\"\n              style={{\n                left: `calc(${(point / (steps - 1)) * 100}% - 2px)`,\n                background: index < currentStep ? primaryColor : secondaryColor,\n              }}\n            />\n          ))}\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default ObjectiveBar;\n",
      "type": "registry:ui",
      "target": "components/targetblank/components/objective-bar.tsx"
    }
  ]
}