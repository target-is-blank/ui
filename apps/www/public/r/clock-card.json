{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "clock-card",
  "type": "registry:ui",
  "title": "Clock card",
  "description": "A clock card component.",
  "dependencies": [
    "motion",
    "lucide-react",
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "registry/components/clock-card/index.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport { HTMLMotionProps, motion, Variants } from \"motion/react\";\nimport { useMemo } from \"react\";\n\ntype ClockCardProps = HTMLMotionProps<\"div\"> & {\n  children: React.ReactNode;\n  date?: string;\n  hour?: string;\n  format?: \"12h\" | \"24h\";\n};\n\nconst cardVariants: Variants = {\n  rest: {\n    scale: 1,\n    y: 0,\n    transition: { type: \"spring\", stiffness: 260, damping: 25 },\n  },\n  hover: {\n    scale: 1.03,\n    y: -4,\n    transition: { type: \"spring\", stiffness: 260, damping: 20 },\n  },\n};\n\nconst contentVariants: Variants = {\n  rest: {\n    opacity: 0,\n    height: 0,\n    y: 10,\n    transition: { duration: 0.3, delay: 0.5 },\n  },\n  hover: {\n    opacity: 1,\n    height: \"auto\",\n    y: 0,\n    transition: { duration: 0.3, delay: 0.5 },\n  },\n};\n\nexport const ClockCard = ({\n  children,\n  className,\n  date,\n  hour,\n  format = \"24h\",\n  ...props\n}: ClockCardProps) => {\n  const resolvedDate = useMemo(() => {\n    return (\n      date ??\n      new Date().toLocaleDateString(\"en-US\", {\n        weekday: \"long\",\n        month: \"long\",\n        day: \"numeric\",\n      })\n    );\n  }, [date]);\n\n  const resolvedHour = useMemo(() => {\n    if (hour) return hour;\n    const now = new Date();\n    return `${now.getHours().toString().padStart(2, \"0\")}:${now\n      .getMinutes()\n      .toString()\n      .padStart(2, \"0\")}`;\n  }, [hour]);\n\n  const { displayHour, meridiem } = useMemo(() => {\n    const [hStr = \"00\", mStr = \"00\"] = resolvedHour.split(\":\");\n    const hNum = parseInt(hStr, 10);\n\n    if (format === \"12h\") {\n      const isPM = hNum >= 12;\n      const h12 = (((hNum + 11) % 12) + 1).toString().padStart(2, \"0\");\n      return {\n        displayHour: `${h12}:${mStr}`,\n        meridiem: isPM ? \"PM\" : \"AM\",\n      } as const;\n    }\n\n    return {\n      displayHour: `${hStr.padStart(2, \"0\")}:${mStr}`,\n      meridiem: null,\n    } as const;\n  }, [resolvedHour, format]);\n\n  return (\n    <motion.div\n      variants={cardVariants}\n      initial=\"rest\"\n      animate=\"rest\"\n      whileHover=\"hover\"\n      className={cn(\n        \"bg-neutral-100 border-2 border-white rounded-3xl shadow-md\",\n        className,\n      )}\n      {...props}\n    >\n      <div\n        className={cn(\n          \"flex flex-col items-center justify-center font-semibold text-primary-foreground bg-cover bg-bottom rounded-3xl h-[150px]\",\n        )}\n        style={{\n          backgroundImage: `url('https://images.unsplash.com/photo-1574610758891-5b809b6e6e2e?q=80&w=2076&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D')`,\n        }}\n      >\n        <div className=\"flex items-center justify-center gap-1\">\n          <span className=\"text-[50px] font-bold leading-none text-transparent bg-gradient-to-b from-white/90 via-white/50 to-white/20 bg-clip-text\">\n            {displayHour}\n          </span>\n\n          {meridiem && (\n            <div className=\"flex flex-col items-center text-center gap-1\">\n              <span className=\"text-sm leading-none h-3 flex items-center justify-center text-transparent bg-gradient-to-b from-white/90 via-white/50 to-white/20 bg-clip-text\">\n                {meridiem.charAt(0)}\n              </span>\n              <span className=\"text-sm leading-none h-3 flex items-center justify-center text-transparent bg-gradient-to-b from-white/90 via-white/50 to-white/20 bg-clip-text\">\n                {meridiem.charAt(1)}\n              </span>\n            </div>\n          )}\n        </div>\n\n        <div className=\"w-full text-center\">\n          <span className=\"text-sm text-transparent bg-gradient-to-b from-white/90 via-white/50 to-white/20 bg-clip-text\">\n            {resolvedDate}\n          </span>\n        </div>\n      </div>\n\n      <motion.div\n        variants={contentVariants}\n        className=\"flex flex-col gap-2 px-4 overflow-hidden\"\n      >\n        {children}\n      </motion.div>\n    </motion.div>\n  );\n};\n",
      "type": "registry:ui",
      "target": "components/targetblank/components/clock-card.tsx"
    }
  ]
}