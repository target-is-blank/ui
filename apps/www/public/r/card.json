{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card",
  "type": "registry:ui",
  "title": "Card",
  "description": "A card component.",
  "dependencies": [
    "motion",
    "lucide-react",
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "registry/components/card/index.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport { HTMLMotionProps, motion } from \"motion/react\";\nimport * as React from \"react\";\nimport { useRef, useState } from \"react\";\n\nconst DEFAULT_COMPONENT = \"button\";\n\ntype CardProps = HTMLMotionProps<\"div\"> & {\n  image: string;\n};\n\nfunction Card({ className, image, ...props }: CardProps) {\n  const cardRef = useRef<HTMLDivElement>(null);\n  const [pos, setPos] = useState({ x: 0, y: 0 });\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    const card = cardRef.current;\n    if (!card) return;\n    const rect = card.getBoundingClientRect();\n    const x = e.clientX - rect.left - rect.width / 2;\n    const y = e.clientY - rect.top - rect.height / 2;\n    const strength = 0.08;\n    setPos({ x: x * strength, y: y * strength });\n  };\n\n  const handleMouseLeave = () => {\n    setPos({ x: 0, y: 0 });\n  };\n\n  return (\n    <div\n      data-slot=\"card\"\n      className=\"flex justify-center items-center p-2 rounded-3xl shadow-sm bg-white/20 backdrop-blur-xs\"\n    >\n      <motion.div\n        ref={cardRef}\n        className={cn(\n          \"relative w-[300px] bg-cover bg-center flex flex-col gap-4 p-6 rounded-2xl shadow-[inset_0px_0px_3px_0px_#FFFFFF]\",\n          className,\n        )}\n        style={{\n          backgroundImage: `url(${image})`,\n        }}\n        animate={{ x: pos.x, y: pos.y }}\n        transition={{ type: \"spring\", stiffness: 400, damping: 40, mass: 1 }}\n        onMouseMove={handleMouseMove}\n        onMouseLeave={handleMouseLeave}\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction CardGradient({\n  className,\n  fromBlur = 40,\n  fromColor = \"rgba(255, 255, 255, 0.5)\",\n  fromOpacity = 40,\n  toBlur = 70,\n  toColor = \"rgba(0, 0, 0, 0)\",\n  toOpacity = 70,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  fromBlur?: number;\n  toBlur?: number;\n  fromColor?: string;\n  toColor?: string;\n  fromOpacity?: number;\n  toOpacity?: number;\n}) {\n  return (\n    <div\n      className={cn(\n        \"absolute inset-0 rounded-2xl backdrop-blur-xl pointer-events-none\",\n        className,\n      )}\n      style={{\n        background: `linear-gradient(to bottom, ${fromColor} ${fromOpacity}%, ${toColor} ${toOpacity}%)`,\n        mask: `linear-gradient(to bottom, rgba(0, 0, 0, 1) ${fromBlur.toString()}%, rgba(0, 0, 0, 0) ${toBlur.toString()}%)`,\n      }}\n      {...props}\n    />\n  );\n}\n\nfunction CardIndicator({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-indicator\"\n      className={cn(\n        \"rounded-full border border-gray-200 bg-white/30 backdrop-blur-xs w-fit\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-1 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"font-semibold leading-none\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-1\", className)}\n      {...props}\n    />\n  );\n}\n\ntype CardFooterProps<T extends React.ElementType = typeof DEFAULT_COMPONENT> = {\n  as?: T;\n  radius?: number;\n  blur?: number;\n  childClassName?: string;\n} & React.ComponentProps<T>;\n\nfunction CardFooter<T extends React.ElementType = typeof DEFAULT_COMPONENT>({\n  as,\n  className,\n  ...props\n}: CardFooterProps<T>) {\n  const Comp = as || DEFAULT_COMPONENT;\n\n  return (\n    <motion.div\n      data-slot=\"card-footer\"\n      className=\"flex overflow-hidden relative justify-center items-center p-1 mt-20 rounded-xl backdrop-blur-sm bg-white/20 shadow-[inset_0px_0px_2px_0px_#FFFFFF]\"\n      whileHover={{ scale: 1.05 }}\n      whileTap={{ scale: 0.95 }}\n    >\n      <Comp\n        className={cn(\n          \"flex overflow-hidden relative z-10 items-center w-full h-full text-sm text-center text-gray-700 shadow-[inset_0px_0px_2px_0px_#FFFFFF]\",\n          className,\n        )}\n        {...props}\n      >\n        {props.children}\n      </Comp>\n    </motion.div>\n  );\n}\n\nexport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardGradient,\n  CardHeader,\n  CardIndicator,\n  CardTitle,\n};\n",
      "type": "registry:ui",
      "target": "components/targetblank/components/card.tsx"
    }
  ]
}